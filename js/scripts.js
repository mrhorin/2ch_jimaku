// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    return $("#get-thread").click(function() {
      var bbs, bbsView;
      bbs = new Bbs($("#url").val());
      bbsView = new BbsView(bbs);
      bbsView.printSubject();
      return $(".thread").click(function() {
        var thread;
        thread = new Thread(bbsView.clickedThread, bbs.url);
        thread.getRes();
        return air.Introspector.Console.log(thread.res);
      });
    });
  });

  window.Bbs = (function() {
    function Bbs(url) {
      this.subjectsToArray = __bind(this.subjectsToArray, this);
      this.getSubjects = __bind(this.getSubjects, this);
      this.url = url;
      this.urlToArray();
      this.getSubjects();
      this.subjectsToArray();
    }

    Bbs.prototype.urlToArray = function() {
      this.url = this.url.split("/");
      return this.url = {
        "domain": this.url[2],
        "category": this.url[3],
        "address": this.url[4]
      };
    };

    Bbs.prototype.getSubjects = function() {
      return $.ajax({
        async: false,
        beforeSend: (function(_this) {
          return function(xhr) {
            return xhr.overrideMimeType("text/html;charset=EUC-JP");
          };
        })(this),
        type: 'GET',
        url: "http://" + this.url["domain"] + "/" + this.url["category"] + "/" + this.url["address"] + "/subject.txt",
        dataType: 'text',
        success: (function(_this) {
          return function(data) {
            if (data) {
              return _this.subjects = data;
            }
          };
        })(this),
        error: function() {
          return alert("スレッド読み込みエラー");
        }
      });
    };

    Bbs.prototype.subjectsToArray = function() {
      var res;
      res = [];
      this.subjects = this.subjects.split("\n");
      $.each(this.subjects, function(index, value) {
        value = value.split(".cgi,");
        return res[index] = {
          "number": value[0],
          "title": value[1]
        };
      });
      this.subjects = res;
      this.subjects.pop();
      return this.subjects.pop();
    };

    return Bbs;

  })();

  window.Thread = (function() {
    function Thread(clickedThread, bbsUrl) {
      this.getRes = __bind(this.getRes, this);
      this.clickedThread = clickedThread;
      this.bbsUrl = bbsUrl;
      this.clickedThread["ReqUrl"] = "http://" + bbsUrl["domain"] + "/bbs/rawmode.cgi/" + bbsUrl["category"] + "/" + bbsUrl["address"] + "/" + clickedThread["number"] + "/";
    }

    Thread.prototype.getRes = function() {
      return $.ajax({
        async: false,
        beforeSend: (function(_this) {
          return function(xhr) {
            return xhr.overrideMimeType("text/html;charset=EUC-JP");
          };
        })(this),
        type: 'GET',
        url: this.clickedThread["ReqUrl"],
        dataType: 'text',
        success: (function(_this) {
          return function(data) {
            return _this.resToArray(data);
          };
        })(this),
        error: function() {
          return alert("スレッド読み込みエラー");
        }
      });
    };

    Thread.prototype.resToArray = function(data) {
      this.res = [];
      data = data.split("\n");
      data.pop();
      return $.each(data, (function(_this) {
        return function(index, value) {
          var i, _i, _results;
          _this.res[index] = [];
          value = value.split("<>");
          _results = [];
          for (i = _i = 0; _i <= 4; i = ++_i) {
            _results.push(_this.res[index][i] = value[i]);
          }
          return _results;
        };
      })(this));
    };

    return Thread;

  })();

  window.BaseView = (function() {
    function BaseView() {}

    BaseView.prototype.sectionToEmpty = function() {
      return $("section").empty();
    };

    return BaseView;

  })();

  window.BbsView = (function(_super) {
    __extends(BbsView, _super);

    function BbsView(bbs) {
      this.printSubject = __bind(this.printSubject, this);
      this.subjects = bbs.subjects;
      this.url = bbs.url;
    }

    BbsView.prototype.printSubject = function() {
      this.sectionToEmpty();
      $.each(this.subjects, (function(_this) {
        return function(index, value) {
          return $("section").append($("<div class=\"thread\">" + _this.subjects[index]["title"] + "</div>").click(function() {
            return _this.clickedThread = {
              "title": _this.subjects[index]["title"],
              "number": _this.subjects[index]["number"]
            };
          }));
        };
      })(this));
      return $(".thread:odd").css("background-color", "#B1FF8E");
    };

    return BbsView;

  })(BaseView);

}).call(this);
